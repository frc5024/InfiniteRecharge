package frc.lib5k.spatial;

import java.awt.Point;

import frc.lib5k.kinematics.FieldPosition;

public class VisionTarget {
    private double x, y, area;
    private boolean exists;

    /**
     * VisionTarget to store positioning data about a point generated by a computer
     * vision system
     * 
     * @param point Point containing X, and Y positions
     */
    public VisionTarget(Point point) {
        this(point.x, point.y);
    }

    /**
     * VisionTarget to store positioning data about a point generated by a computer
     * vision system
     * 
     * @param x X position on video feed
     * @param y Y position on video feed
     */
    public VisionTarget(double x, double y) {
        this(x, y, 1);
    }

    /**
     * VisionTarget to store positioning data about a point generated by a computer
     * vision system
     * 
     * @param x    X position on video feed
     * @param y    Y position on video feed
     * @param area Area of target
     */
    public VisionTarget(double x, double y, double area) {
        this.setX(x);
        this.setY(y);
        this.setArea(area);
    }

    // TODO: make this less sketchy (this is a copy-paste from team 1114, and is
    // configured for Simbot snowstorm)

    /**
     * Get the distance from the camera to the target in meters
     * 
     * @return Distance in meters
     */
    public double getDistance() {
        double x = getArea();
        double distance;
        if (x == 0 || x > 12.0) {
            distance = 2.3 * 12.0;
        } else {
            distance = Math.pow(x, -0.507) * 7.7562;
        }
        return distance / 3.281;
    }

    /**
     * Get the target's field-relative position (does not account for angle)
     * 
     * @param robot_position Field-relative position of robot
     * @return Field-relative position of target
     */
    public FieldPosition getPosition(FieldPosition robot_position) {

        double x_pos = robot_position.getX() + getDistance() * Math.cos(getX() + robot_position.getTheta());
        double y_pos = robot_position.getY() + getDistance() * Math.sin(getX() + robot_position.getTheta());

        return new FieldPosition(x_pos, y_pos);

    }

    public boolean exists() {
        return exists;
    }

    public void setExists(boolean exists) {
        this.exists = exists;
    }

    public double getY() {
        return y;
    }

    public void setY(double y) {
        this.y = y;
    }

    public double getArea() {
        return area;
    }

    public void setArea(double area) {
        this.area = area;
    }

    public double getX() {
        return x;
    }

    public void setX(double x) {
        this.x = x;
    }

}