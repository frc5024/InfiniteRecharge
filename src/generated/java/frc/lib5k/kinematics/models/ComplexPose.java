// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib5k/kinematics/ComplexPose.proto

package frc.lib5k.kinematics.models;

public final class ComplexPose {
  private ComplexPose() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ComplexPoseProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lib5k.kinematics.ComplexPoseProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required double x = 1;</code>
     */
    double getX();

    /**
     * <code>required double y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required double y = 2;</code>
     */
    double getY();

    /**
     * <code>optional double theta = 3;</code>
     */
    boolean hasTheta();
    /**
     * <code>optional double theta = 3;</code>
     */
    double getTheta();

    /**
     * <code>optional double dx = 4;</code>
     */
    boolean hasDx();
    /**
     * <code>optional double dx = 4;</code>
     */
    double getDx();

    /**
     * <code>optional double dy = 5;</code>
     */
    boolean hasDy();
    /**
     * <code>optional double dy = 5;</code>
     */
    double getDy();

    /**
     * <code>optional double dtheta = 6;</code>
     */
    boolean hasDtheta();
    /**
     * <code>optional double dtheta = 6;</code>
     */
    double getDtheta();

    /**
     * <code>optional double dt = 7;</code>
     */
    boolean hasDt();
    /**
     * <code>optional double dt = 7;</code>
     */
    double getDt();
  }
  /**
   * Protobuf type {@code lib5k.kinematics.ComplexPoseProto}
   */
  public  static final class ComplexPoseProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lib5k.kinematics.ComplexPoseProto)
      ComplexPoseProtoOrBuilder {
    // Use ComplexPoseProto.newBuilder() to construct.
    private ComplexPoseProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComplexPoseProto() {
      x_ = 0D;
      y_ = 0D;
      theta_ = 0D;
      dx_ = 0D;
      dy_ = 0D;
      dtheta_ = 0D;
      dt_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ComplexPoseProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              x_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              y_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              theta_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              dx_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              dy_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              dtheta_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              dt_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc.lib5k.kinematics.models.ComplexPose.internal_static_lib5k_kinematics_ComplexPoseProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc.lib5k.kinematics.models.ComplexPose.internal_static_lib5k_kinematics_ComplexPoseProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.class, frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>required double x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double x = 1;</code>
     */
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>required double y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double y = 2;</code>
     */
    public double getY() {
      return y_;
    }

    public static final int THETA_FIELD_NUMBER = 3;
    private double theta_;
    /**
     * <code>optional double theta = 3;</code>
     */
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double theta = 3;</code>
     */
    public double getTheta() {
      return theta_;
    }

    public static final int DX_FIELD_NUMBER = 4;
    private double dx_;
    /**
     * <code>optional double dx = 4;</code>
     */
    public boolean hasDx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double dx = 4;</code>
     */
    public double getDx() {
      return dx_;
    }

    public static final int DY_FIELD_NUMBER = 5;
    private double dy_;
    /**
     * <code>optional double dy = 5;</code>
     */
    public boolean hasDy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double dy = 5;</code>
     */
    public double getDy() {
      return dy_;
    }

    public static final int DTHETA_FIELD_NUMBER = 6;
    private double dtheta_;
    /**
     * <code>optional double dtheta = 6;</code>
     */
    public boolean hasDtheta() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double dtheta = 6;</code>
     */
    public double getDtheta() {
      return dtheta_;
    }

    public static final int DT_FIELD_NUMBER = 7;
    private double dt_;
    /**
     * <code>optional double dt = 7;</code>
     */
    public boolean hasDt() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double dt = 7;</code>
     */
    public double getDt() {
      return dt_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, theta_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, dx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, dy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, dtheta_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, dt_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, theta_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, dx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, dy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, dtheta_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, dt_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto)) {
        return super.equals(obj);
      }
      frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto other = (frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getX())
            == java.lang.Double.doubleToLongBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getY())
            == java.lang.Double.doubleToLongBits(
                other.getY()));
      }
      result = result && (hasTheta() == other.hasTheta());
      if (hasTheta()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTheta())
            == java.lang.Double.doubleToLongBits(
                other.getTheta()));
      }
      result = result && (hasDx() == other.hasDx());
      if (hasDx()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDx())
            == java.lang.Double.doubleToLongBits(
                other.getDx()));
      }
      result = result && (hasDy() == other.hasDy());
      if (hasDy()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDy())
            == java.lang.Double.doubleToLongBits(
                other.getDy()));
      }
      result = result && (hasDtheta() == other.hasDtheta());
      if (hasDtheta()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDtheta())
            == java.lang.Double.doubleToLongBits(
                other.getDtheta()));
      }
      result = result && (hasDt() == other.hasDt());
      if (hasDt()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDt())
            == java.lang.Double.doubleToLongBits(
                other.getDt()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getX()));
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getY()));
      }
      if (hasTheta()) {
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTheta()));
      }
      if (hasDx()) {
        hash = (37 * hash) + DX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDx()));
      }
      if (hasDy()) {
        hash = (37 * hash) + DY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDy()));
      }
      if (hasDtheta()) {
        hash = (37 * hash) + DTHETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDtheta()));
      }
      if (hasDt()) {
        hash = (37 * hash) + DT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDt()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lib5k.kinematics.ComplexPoseProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lib5k.kinematics.ComplexPoseProto)
        frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc.lib5k.kinematics.models.ComplexPose.internal_static_lib5k_kinematics_ComplexPoseProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc.lib5k.kinematics.models.ComplexPose.internal_static_lib5k_kinematics_ComplexPoseProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.class, frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.Builder.class);
      }

      // Construct using frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        theta_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        dx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        dy_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        dtheta_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        dt_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc.lib5k.kinematics.models.ComplexPose.internal_static_lib5k_kinematics_ComplexPoseProto_descriptor;
      }

      public frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto getDefaultInstanceForType() {
        return frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.getDefaultInstance();
      }

      public frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto build() {
        frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto buildPartial() {
        frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto result = new frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.theta_ = theta_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dx_ = dx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dy_ = dy_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dtheta_ = dtheta_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dt_ = dt_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto) {
          return mergeFrom((frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto other) {
        if (other == frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (other.hasDtheta()) {
          setDtheta(other.getDtheta());
        }
        if (other.hasDt()) {
          setDt(other.getDt());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double x_ ;
      /**
       * <code>required double x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double x = 1;</code>
       */
      public double getX() {
        return x_;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder setX(double value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>required double y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double y = 2;</code>
       */
      public double getY() {
        return y_;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder setY(double value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        onChanged();
        return this;
      }

      private double theta_ ;
      /**
       * <code>optional double theta = 3;</code>
       */
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double theta = 3;</code>
       */
      public double getTheta() {
        return theta_;
      }
      /**
       * <code>optional double theta = 3;</code>
       */
      public Builder setTheta(double value) {
        bitField0_ |= 0x00000004;
        theta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double theta = 3;</code>
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000004);
        theta_ = 0D;
        onChanged();
        return this;
      }

      private double dx_ ;
      /**
       * <code>optional double dx = 4;</code>
       */
      public boolean hasDx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double dx = 4;</code>
       */
      public double getDx() {
        return dx_;
      }
      /**
       * <code>optional double dx = 4;</code>
       */
      public Builder setDx(double value) {
        bitField0_ |= 0x00000008;
        dx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dx = 4;</code>
       */
      public Builder clearDx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dx_ = 0D;
        onChanged();
        return this;
      }

      private double dy_ ;
      /**
       * <code>optional double dy = 5;</code>
       */
      public boolean hasDy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double dy = 5;</code>
       */
      public double getDy() {
        return dy_;
      }
      /**
       * <code>optional double dy = 5;</code>
       */
      public Builder setDy(double value) {
        bitField0_ |= 0x00000010;
        dy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dy = 5;</code>
       */
      public Builder clearDy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dy_ = 0D;
        onChanged();
        return this;
      }

      private double dtheta_ ;
      /**
       * <code>optional double dtheta = 6;</code>
       */
      public boolean hasDtheta() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double dtheta = 6;</code>
       */
      public double getDtheta() {
        return dtheta_;
      }
      /**
       * <code>optional double dtheta = 6;</code>
       */
      public Builder setDtheta(double value) {
        bitField0_ |= 0x00000020;
        dtheta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dtheta = 6;</code>
       */
      public Builder clearDtheta() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dtheta_ = 0D;
        onChanged();
        return this;
      }

      private double dt_ ;
      /**
       * <code>optional double dt = 7;</code>
       */
      public boolean hasDt() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double dt = 7;</code>
       */
      public double getDt() {
        return dt_;
      }
      /**
       * <code>optional double dt = 7;</code>
       */
      public Builder setDt(double value) {
        bitField0_ |= 0x00000040;
        dt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dt = 7;</code>
       */
      public Builder clearDt() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dt_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lib5k.kinematics.ComplexPoseProto)
    }

    // @@protoc_insertion_point(class_scope:lib5k.kinematics.ComplexPoseProto)
    private static final frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto();
    }

    public static frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ComplexPoseProto>
        PARSER = new com.google.protobuf.AbstractParser<ComplexPoseProto>() {
      public ComplexPoseProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ComplexPoseProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ComplexPoseProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexPoseProto> getParserForType() {
      return PARSER;
    }

    public frc.lib5k.kinematics.models.ComplexPose.ComplexPoseProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lib5k_kinematics_ComplexPoseProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lib5k_kinematics_ComplexPoseProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"lib5k/kinematics/ComplexPose.proto\022\020li" +
      "b5k.kinematics\"k\n\020ComplexPoseProto\022\t\n\001x\030" +
      "\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\r\n\005theta\030\003 \001(\001\022\n\n\002dx\030\004 " +
      "\001(\001\022\n\n\002dy\030\005 \001(\001\022\016\n\006dtheta\030\006 \001(\001\022\n\n\002dt\030\007 " +
      "\001(\001B\035\n\033frc.lib5k.kinematics.models"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_lib5k_kinematics_ComplexPoseProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_lib5k_kinematics_ComplexPoseProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lib5k_kinematics_ComplexPoseProto_descriptor,
        new java.lang.String[] { "X", "Y", "Theta", "Dx", "Dy", "Dtheta", "Dt", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
